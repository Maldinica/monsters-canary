{"version":3,"sources":["components/card/card.components.jsx","logo.svg","components/card-list/card-list.components.jsx","components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","monsters","map","key","id","SearchBox","placeholder","handleChange","type","onChange","App","handelChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAEaA,GCFE,I,kBDEK,SAAAC,GAAK,OACrB,yBAAKC,UAAU,kBACX,yBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,KAAxC,4BACtB,4BAAKL,EAAMI,QAAQC,MACnB,4BAAKL,EAAMI,QAAQE,UEDdC,EAAW,SAACP,GAAD,OAGpB,yBAAKC,UAAU,aACVD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OACvB,kBAAC,EAAD,CAAMM,IAAMN,EAAQO,GAAIP,QAASA,SCNhCQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACpB,2BAAOb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8DPG,E,kDAvCX,aAAe,IAAD,8BAEV,gBAiBJC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAhBtC,EAAKC,MAAO,CACRhB,SAAS,GACTa,YAAY,IANN,E,gEAaO,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACZ,SAAUqB,S,+BAOvC,IAAD,EAC6BC,KAAKN,MAA9BhB,EADJ,EACIA,SAAUa,EADd,EACcA,YACZU,EAAmBvB,EAASwB,QAAQ,SAAA5B,GAAO,OAAIA,EAAQC,KAAK4B,cAAcC,SAASb,EAAYY,kBAEvG,OACE,yBAAKhC,UAAU,OACX,kDACA,kBAAC,EAAD,CACEY,YAAY,oBACZC,aAAcgB,KAAKZ,eAErB,kBAAC,EAAD,CAAUV,SAAUuB,S,GAnCbI,IAAMC,WClBVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.811fb097.chunk.js","sourcesContent":["import React from 'react'\nimport './card.style.css'\nexport const Card = props => (\n    <div className='card-container'>\n        <img alt='monster' src={`https://robohash.org/${props.monster.name}?set=set2&size=250x250`}/>\n        <h1>{props.monster.name}</h1>\n        <h2>{props.monster.email}</h2>\n    </div>\n);","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react'\n\nimport './card-list.style.css'\n\nimport { Card } from '../card/card.components'\nexport const CardList = (props) =>(\n    //{this.state.monsters.map(monster => <h1 key={monster.id}> {monster.name}</h1>)}\n    //return <div className='card-list'>{props.children}</div>;\n    <div className='card-list'>\n        {props.monsters.map(monster => (\n            <Card key= {monster.id} monster={monster} />\n        ))}\n    </div>\n)","import React from 'react'\n\nimport './search-box.style.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n     <input className='search'\n            type='search'\n            placeholder={placeholder}\n            onChange={handleChange}\n     />\n\n);","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport { CardList} from \"./components/card-list/card-list.components\";\nimport {SearchBox} from \"./components/search-box/search-box.components\";\n\n/*\nfunction App() {\n return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p>\n            <a\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a>\n          </header>\n        </div>\n      );\n   }\n\n */\n\nclass App  extends React.Component{\n    constructor() {\n\n        super();\n\n        this.state ={\n            monsters:[],\n            searchField:''\n        };\n\n        //this.handelChange = this.handelChange.bind(this);\n    }\n\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({monsters: users}));\n    }\n\n    handelChange = (e) =>{\n        this.setState({ searchField: e.target.value })\n    }\n\n    render(){\n        const { monsters, searchField} = this.state;\n        const filteredMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n      return (\n        <div className=\"App\">\n            <h1> Monsters Rolodex </h1>\n            <SearchBox\n              placeholder='search monster...'\n              handleChange={this.handelChange}\n            />\n            <CardList monsters={filteredMonsters}/>\n        </div>\n      );\n   }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}